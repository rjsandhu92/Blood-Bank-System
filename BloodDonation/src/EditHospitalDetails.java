
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Pavilion
 */
public class EditHospitalDetails extends javax.swing.JFrame {

    /**
     * Creates new form EditHospitalDetails
     */
    int id;
    public EditHospitalDetails(int id) 
    {
        initComponents();
        this.id = id;
        
        try 
        {

            Connection con = DataBaseConnection.open();
            Statement stmt = (Statement) con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            ResultSet rs = stmt.executeQuery("select * from hospital where hospital_id="+id);
            rs.next();

            String name = rs.getString("hospital_name");
            String address = rs.getString("hospital_address");
            String city = rs.getString("hospital_city");
            String state = rs.getString("hospital_state");
            String phone = rs.getString("hospital_phone");

            editHospitalAddressText.setText(address);
            editHospitalNameText.setText(name);
            editHospitalCityText.setText(city);
            editHospitalPhoneText.setText(phone);
            editHospitalStateText.setText(state);
            DataBaseConnection.close(con);
        } 
        catch (Exception ex)
        {
            ex.printStackTrace();
        }
        
        editHospitalPhoneText.addKeyListener(new KeyAdapter() 
        {
            public void keyTyped(KeyEvent e) 
            {
                char ch = e.getKeyChar();
                if(!isNumeric(ch) || editHospitalPhoneText.getText().length()>9)
                {
                    e.consume();
                }
            }
        });
    }

    boolean isNumeric(char c)
    {
        try 
        {
            Integer.parseInt(""+c);
            return true;
        }
        catch (Exception e) 
        {
           return false;
        }
    }
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newCampNameLabel = new javax.swing.JLabel();
        newCampLocationLabel = new javax.swing.JLabel();
        newCampDateLabel = new javax.swing.JLabel();
        editHospitalNameText = new javax.swing.JTextField();
        editHospitalCancelButton = new javax.swing.JButton();
        newCampCityLabel = new javax.swing.JLabel();
        newCampStateLabel = new javax.swing.JLabel();
        editHospitalCityText = new javax.swing.JTextField();
        editHospitalPhoneText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        editHospitalAddressText = new javax.swing.JTextArea();
        editHospitalStateText = new javax.swing.JTextField();
        editHospitalUpdateButton = new javax.swing.JButton();
        editHospitalDeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        getContentPane().setLayout(null);

        newCampNameLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        newCampNameLabel.setText("Hospital Name");
        getContentPane().add(newCampNameLabel);
        newCampNameLabel.setBounds(55, 80, 100, 33);

        newCampLocationLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        newCampLocationLabel.setText("Address");
        getContentPane().add(newCampLocationLabel);
        newCampLocationLabel.setBounds(55, 160, 82, 33);

        newCampDateLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        newCampDateLabel.setText("Contact No");
        getContentPane().add(newCampDateLabel);
        newCampDateLabel.setBounds(55, 350, 82, 33);
        getContentPane().add(editHospitalNameText);
        editHospitalNameText.setBounds(180, 80, 180, 33);

        editHospitalCancelButton.setText("Cancel");
        editHospitalCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editHospitalCancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editHospitalCancelButton);
        editHospitalCancelButton.setBounds(280, 400, 80, 40);

        newCampCityLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        newCampCityLabel.setText("City");
        getContentPane().add(newCampCityLabel);
        newCampCityLabel.setBounds(55, 250, 82, 33);

        newCampStateLabel.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        newCampStateLabel.setText("State");
        getContentPane().add(newCampStateLabel);
        newCampStateLabel.setBounds(55, 300, 82, 33);
        getContentPane().add(editHospitalCityText);
        editHospitalCityText.setBounds(180, 250, 180, 33);
        getContentPane().add(editHospitalPhoneText);
        editHospitalPhoneText.setBounds(180, 350, 180, 33);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 43, 52));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Hospital");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(70, 0, 290, 70);

        editHospitalAddressText.setColumns(20);
        editHospitalAddressText.setLineWrap(true);
        editHospitalAddressText.setRows(5);
        jScrollPane1.setViewportView(editHospitalAddressText);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(180, 130, 180, 100);
        getContentPane().add(editHospitalStateText);
        editHospitalStateText.setBounds(180, 300, 180, 33);

        editHospitalUpdateButton.setText("Update");
        editHospitalUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editHospitalUpdateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editHospitalUpdateButton);
        editHospitalUpdateButton.setBounds(50, 400, 100, 40);

        editHospitalDeleteButton.setText("Delete");
        editHospitalDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editHospitalDeleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(editHospitalDeleteButton);
        editHospitalDeleteButton.setBounds(165, 400, 100, 40);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-466)/2, (screenSize.height-489)/2, 466, 489);
    }// </editor-fold>//GEN-END:initComponents

    private void editHospitalCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editHospitalCancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_editHospitalCancelButtonActionPerformed

    private void editHospitalUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editHospitalUpdateButtonActionPerformed
        String name = editHospitalNameText.getText();
        String address = editHospitalAddressText.getText();
        String city = editHospitalCityText.getText();
        String state = editHospitalStateText.getText();
        String phone = editHospitalPhoneText.getText();

        if (name.isEmpty() || address.isEmpty() || city.isEmpty() || state.isEmpty() || phone.isEmpty()) 
        {
            JOptionPane.showMessageDialog(this, "All fields mandatory !!");
        } 
        else if (phone.length() < 10)
        {
            JOptionPane.showMessageDialog(this, "Phone number not valid");
        } 
        else 
        {
            try 
            {

                Connection con = DataBaseConnection.open();
                Statement stmt = (Statement) con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                ResultSet rs = stmt.executeQuery("select * from hospital where hospital_id="+id);
                rs.next();
                rs.updateString("hospital_name", name);
                rs.updateString("hospital_address", address);
                rs.updateString("hospital_city", city);
                rs.updateString("hospital_state", state);
                rs.updateString("hospital_phone", phone);
                rs.updateRow();
                JOptionPane.showMessageDialog(this, "Hospital Updated Sucessfully!!");
                DataBaseConnection.close(con);
            } 
            catch (Exception ex)
            {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_editHospitalUpdateButtonActionPerformed

    private void editHospitalDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editHospitalDeleteButtonActionPerformed
        int i = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete ?", "Delete", JOptionPane.YES_NO_OPTION);
        if(i == 0)
        {
            try 
            {
                Connection con = DataBaseConnection.open();
                Statement stmt = (Statement) con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                ResultSet rs = stmt.executeQuery("select * from hospital where hospital_id="+id);
                rs.next();
                rs.deleteRow();
                JOptionPane.showMessageDialog(this, "Hospital Deleted Sucessfully!!");
                DataBaseConnection.close(con);
                this.dispose();
            } 
            catch (Exception ex)
            {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_editHospitalDeleteButtonActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        Global.mainForm.setVisible(true);
        Global.currentForm.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditHospitalDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditHospitalDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditHospitalDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditHospitalDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new EditHospitalDetails(2).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea editHospitalAddressText;
    private javax.swing.JButton editHospitalCancelButton;
    private javax.swing.JTextField editHospitalCityText;
    private javax.swing.JButton editHospitalDeleteButton;
    private javax.swing.JTextField editHospitalNameText;
    private javax.swing.JTextField editHospitalPhoneText;
    private javax.swing.JTextField editHospitalStateText;
    private javax.swing.JButton editHospitalUpdateButton;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel newCampCityLabel;
    private javax.swing.JLabel newCampDateLabel;
    private javax.swing.JLabel newCampLocationLabel;
    private javax.swing.JLabel newCampNameLabel;
    private javax.swing.JLabel newCampStateLabel;
    // End of variables declaration//GEN-END:variables
}
